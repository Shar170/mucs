import streamlit as st

settings = []
#—Å–æ–∑–¥–∞—ë—Ç –±–ª–æ–∫ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
def create_block(id,place=st, _settings= settings):
    block = place.expander(f'‚ö° –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫ {id+1}')
    block.write("–£–∫–∞–∂–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Ç—Ä–æ–π–∫–∏ –±–ª–æ–∫–∞")
    param1 = block.slider("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ 1",key=str(id)+"param1")
    param2 = block.radio("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ 2", ('Al‚ÇÇO‚ÇÉ', 'SiC'),key=str(id)+"param2")

    block_settings = {'param1':param1, 'param2':param2}
    settings[id] = block_settings
    return settings

# —Ä–∏—Å—É–µ—Ç —Å—Ç—Ä–µ–ª–æ—á–∫—É –≤ —Ü–µ–Ω—Ç—Ä–µ
def draw_arrow(arrow="‚¨á"):
    _, center, _ = st.columns([5,1,5])
    center.write("‚¨á")

st.title("–°–∏—Å—Ç–µ–º–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏")

blocks_count =  st.slider('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤', min_value=1, max_value=5, value=2)


start_data = st.expander("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
avStSize = start_data.slider('–ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —á–∞—Å—Ç–∏—Ü, –º–∏–∫—Ä–æ–Ω', min_value=0.5, max_value=100.0, value=23.7, step=0.5)
start_param2 = start_data.radio("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ 2",('Al‚ÇÇO‚ÇÉ', 'SiC'), key='start_data')
draw_arrow()



for i in range(blocks_count):
    settings.append({}) #–¥–æ–±–∞–≤–ª—è—è–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
    bs = create_block(i)
    draw_arrow()

result_settings = st.expander('üèÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è')
to_file = result_settings.checkbox('–í—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞?')


st.write("–î–µ–±–∞–≥ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Ä–∞—Å—á—ë—Ç")
for i in range(blocks_count):
    st.json(settings[i])